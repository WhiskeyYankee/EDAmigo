% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/boxCox.R
\name{boxCox}
\alias{boxCox}
\title{Simultaneous Boxcox power transformations}
\usage{
boxCox(X, lambda = NULL, cols = NULL, alpha = 0.001, FILTER = TRUE)
}
\arguments{
\item{X}{A numeric matrix or a dataframe containing numeric columns}

\item{lambda}{Numeric value(s) indicating what power(s) to use in the Box-Cox transformation. If not provided, boxCox will use -3 , -2.99, ... , 2.99, 3}

\item{cols}{A vector indicating the column numbers or the names of the columns one wishes to evaluate. If NULL then all numeric columns will be evalutated.}

\item{alpha}{A numeric value used to determine the shift parameter when 0s and or negative values are detected in the data. In the case of the default 0.001, if the data contains 0s but no negative values, then the shift parameter is set to 0.001.}

\item{FILTER}{A Boolean value that determines if the output will filter out transformations that don't improve the adherence to normality and reduce outliers. The default is TRUE but user may wish to set it to false to either see why a value is not suggested or to perform a desired transformation.}
}
\value{
The boxCox function returns a list of objects. The boxCox_Results data frame has the estimates for each column evaluated by the function. The lambda_1 vector contains all of the lambdas evaluated by the function. The log_like data frame contains the log-liklihood calculations for each lambda. The transformations dataframe contains the transformed values.
}
\description{
\strong{boxCox} is a function that aims to ease the EDA process by computing the boxcox transformations for all of the specified columns in a matrix or dataframe at the same time.
The function uses the two-parameter Box-Cox transformation to account for any numeric columns that have either negative values or 0s. The alpha parameter is
used to control how the shift parameter lambda_2 is set. The function also outputs asymptotically constructed confidence intervals for the power transformation
parameter lambda_1 so users can easily select a simpler alternative power if they choose to. Normality is tested for both the raw and transformed data using the
Anderson-Darling method.
}
\details{
This implementation of BoxCox uses the following form of the normal log likelihood when selecting the power transformation value lambda. \deqn{log(L(\hat{\mu} , \hat{\sigma})) = -(\frac{n}{2})(log(2\pi \hat{\sigma^2}) +1)+ n(\lambda -1)log(GM(y))} where GM is the geomtric mean.
}
\examples{
# Create a dataframe with 2 numeric columns
test_data = data.frame( X_1 = rchisq(1000, df = 1), X_2 = rchisq(1000, df = 5) )

# Use the boxCox function with the default settings to search for meaningful transformations in the data
test_results = boxCox(test_data)

# View the suggested transformations
test_results$boxCox_Results

# Create  boxplots of the data before and after the suggested transformation is made
par(mfrow = c(2,2))
boxplot(test_data$X_1 , main = "X_1 Before")
boxplot(test_results$transformations$X_1 , main = "X_1 After")
boxplot(test_data$X_2 , main = "X_2 Before")
boxplot(test_results$transformations$X_2 , main = "X_2 After")
}
